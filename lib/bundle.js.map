{"version":3,"sources":["webpack:///webpack/bootstrap 73a5660f0dfd438778b7","webpack:///./lib/main.js","webpack:///./lib/projectile.js","webpack:///./lib/player.js","webpack:///./lib/game.js","webpack:///./lib/ball.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;;;AChEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;;AAIJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;;AAGJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,8CAA8C,cAAc;AAC5D,eAAe,WAAW;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;;;;;;;;ACnOJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;AC9CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA,iDAAiD;AACjD;AACA,mDAAmD;AACnD;AACA,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD,eAAe,UAAU;AACzB,eAAe,MAAM;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChNA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA,kFAAkF,2CAA2C;AAC7H,SAAS;AACT,kFAAkF,2CAA2C;AAC7H;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA,SAAS;;AAET;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;ACpNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 73a5660f0dfd438778b7","import Game from './game.js';\nimport Projectile from './projectile.js';\nimport Player from './player.js';\nimport Ball from './ball.js';\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=> {\nlet canvas = document.getElementById('canvas');\nlet ctx = canvas.getContext('2d');\n\n// var raf;\n// var raf2;\n// var raf3;\n\n// var player = {\n//   x: 100,\n//   y: 400,\n//   dvy: 4,\n//   vy: -4,\n//   state: \"ground\",\n//   radius: 25,\n//   color: 'blue',\n//   keypressed: false,\n//   draw: function() {\n//     // ctx.beginPath();\n//     // ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n//     // ctx.closePath();\n//     // ctx.fillStyle = this.color;\n//     // ctx.fill();\n//     // ctx.beginPath();\n//\n//     ctx.fillRect(this.x, this.y, 20, 50);\n//     // ctx.closePath();\n//   }\n// };\n//\n// function draw() {\n//   ctx.clearRect(100, 280, 20, 200);\n//   player.draw();\n//   if (player.y > 280 && (player.state === \"ground\" || player.state === \"going up\")) {\n//     player.y += player.vy;\n//     player.state = \"going up\";\n//     window.requestAnimationFrame(draw);\n//   }else if (player.y <= 280) {\n//     player.state = \"going down\";\n//     player.y += player.dvy;\n//     window.requestAnimationFrame(draw);\n//   }else if (player.state === \"going down\" && player.y >= 400) {\n//     player.y = 400;\n//     player.state = \"ground\";\n//     player.keypressed = false;\n//   }else if (player.state === \"going down\") {\n//     player.y += player.dvy;\n//     window.requestAnimationFrame(draw);\n//   }\n//\n// }\n\n// document.addEventListener('keypress', function(e) {\n//   if (e.key === 'w' && player.keypressed === false) {\n//     window.requestAnimationFrame(draw);\n//     player.keypressed = true;\n//   }\n// });\n//\n// player.draw();\n\n// let player = new Player(canvas, ctx);\nlet game = new Game(canvas, ctx);\ngame.draw();\n\ndocument.addEventListener(\"keypress\", (e) => {\n    game.keyProcessor(e);\n});\n\n//PLAYER\n// let player1 = new Player(canvas, ctx);\n//\n// document.addEventListener('keypress', function(e) {\n//   if (e.key === 'w' && player1.keypressed === false) {\n    // window.requestAnimationFrame(player1.animateJump);\n    // player1.keypressed = true;\n//   }\n// });\n\n\n\n//BALL\n// let ball = new Ball(canvas, ctx);\n//\n// // function draw3(){\n// //   ctx.clearRect(0,0, canvas.width, canvas.height);\n// //   ball.draw();\n// //   ball.x += ball.vx;\n// //   window.requestAnimationFrame(draw3);\n// //\n// // }\n//\n//\n// document.addEventListener('keypress', (e) => {\n//   if (e.key === 'b') {\n//     window.requestAnimationFrame(ball.animate);\n//   }\n// });\n\n\n\n// var projectile = {\n//   x: 600,\n//   y: 430,\n//   dx: -8,\n//   color: 'blue',\n//   draw: function() {\n//     // ctx.beginPath();\n//     // ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, true);\n//     // ctx.closePath();\n//     // ctx.fillStyle = this.color;\n//     // ctx.fill();\n//     // ctx.beginPath();\n//\n//     ctx.fillRect(this.x, this.y, 40, 20);\n//     // ctx.closePath();\n//   }\n// };\n\n// function draw2() {\n//   ctx.clearRect(120, 430, canvas.width, 20);\n//   ctx.clearRect(0, 430, 100, 20);\n//   projectile.draw();\n//   projectile.x += projectile.dx;\n//   window.requestAnimationFrame(draw2);\n// }\n\n\n// document.addEventListener('keypress', function(e) {\n//   if (e.key === 'l') {\n//     projectile.x = 600;\n//     projectile.y = 430;\n//     projectile.draw();\n//     window.requestAnimationFrame(draw2);\n//   }\n// });\n\n\n//PROJECTILE\n// document.addEventListener('keypress', function(e) {\n//   if (e.key === 'l') {\n//     let proj = new Projectile(canvas, ctx);\n//     window.requestAnimationFrame(proj.animate);\n//   }\n// });\n\n// setInterval(() => {\n//       projectile.x = 600;\n//       projectile.y = 430;\n//       projectile.draw();\n//       window.requestAnimationFrame(draw2);\n//\n// }, 1000);\n\n});\n\n\n// document.addEventListener('DOMContentLoaded', () => {\n//   // let game = new Game();\n//\n//   // const stage = new createjs.Stage(canvas);\n//\n//   // let circle = new createjs.Shape();\n//   //\n//   // circle.graphics.beginFill(\"DeepSkyBlue\").drawCircle(100, 100, 50);\n//   // let player = new Player(stage);\n//   //\n//     // let proj = new Projectile(700, 400, stage);\n//   //\n//   // canvas.addEventListener(\"click\", () => {\n//   //   player.jump();\n//   // });\n//   //\n//   // setTimeout(new Projectile(700, 400, stage), 1000);\n//   //\n//   // let player = new Player(stage);\n//   // // player.draw();\n//   // document.addEventListener(\"keypress\", () => {\n//   //   player.jump();\n//   // });\n//     // stage.addChild(proj.roundRect);\n//     // createjs.Tween.get(proj.roundRect, { loop: false })\n//     // .to({ x: -1000 }, 1000, createjs.Ease.getPowInOut(1));\n//     // createjs.Ticker.setFPS(60);\n//     // createjs.Ticker.addEventListener(\"tick\", stage);\n//\n//   // stage.addChild(proj.roundRect);\n//   // stage.update();\n//   // document.addEventListener(\"keydown\", (e) => {\n//   //   game.keyProcessor(e);\n//   // });\n//\n//   // const canvas = document.getElementById('canvas');\n//   // // debugger\n//   // const context = canvas.getContext(\"2d\");\n//   // const player = new Player(100, 400, context);\n//   // player.draw();\n//   //\n//   // document.addEventListener(\"keydown\", (e) => {\n//   //   if (e.key === \"ArrowUp\") {\n//   //     player.jump();\n//   //   }\n//   // });\n//   // function MainLoop() {\n//   //   game.update();\n//   //   game.draw();\n//   //   // Call the main loop again at a frame rate of 30fps\n//   //   setTimeout(MainLoop, 10);\n//   // }\n//\n//   // MainLoop();\n//   const canvas = document.getElementById('canvas');\n//   const ctx = canvas.getContext('2d');\n//   // console.log(canvas);\n//   const ball = new Ball(canvas, ctx);\n//   const raf = ball.raf;\n//\n//   canvas.addEventListener('mouseover', function(e) {\n//     raf = window.requestAnimationFrame(ball.draw);\n//   });\n//\n//   // console.log(ball);\n// });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/main.js\n// module id = 0\n// module chunks = 0","// class Projectile {\n//   constructor(posX, posY, stage) {\n//     this.roundRect = new createjs.Shape();\n//     this.roundRect.graphics.beginFill(\"Red\").drawRoundRect(posX, posY, 50, 25, 10);\n//     this.stage = stage;\n//     this.moveLeft();\n//   }\n//\n//   moveLeft(){\n//     this.stage.addChild(this.roundRect);\n//     createjs.Tween.get(this.roundRect, { loop: false })\n//     .to({ x: -1000 }, 1000, createjs.Ease.getPowInOut(1));\n//     createjs.Ticker.setFPS(60);\n//     createjs.Ticker.addEventListener(\"tick\", this.stage);\n//   }\n// }\nclass Projectile {\n  constructor(canvas, ctx, game, y, dx) {\n    this.x = 750;\n    this.y = y;\n    this.dx = dx;\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.game = game;\n    this.animate = this.animate.bind(this);\n  }\n\n  draw(){\n    let projectileImage = new Image();\n    projectileImage.src = './assets/images/iago.png';\n    this.ctx.drawImage(projectileImage, this.x, this.y, 110, 55);\n\n    // this.ctx.fillRect(this.x, this.y, 40, 20);\n  }\n\n  animate(){\n    // this.ctx.clearRect(120, 430, this.canvas.width, 20);\n    // this.ctx.clearRect(0, 430, 100, 20);\n    // debugger\n    this.game.draw();\n    this.x += this.dx;\n    window.requestAnimationFrame(this.animate);\n  }\n}\n\nexport default Projectile;\n// https://github.com/DrBaryon/kittygrabber\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/projectile.js\n// module id = 1\n// module chunks = 0","var requestAnim = window.requestAnimationFrame ||\n                    window.webkitRequestAnimationFrame ||\n                    window.mozRequestAnimationFrame ||\n                    setInterval;\nvar gravity = 0.1;\n\nclass Player {\n  constructor(canvas, ctx, game) {\n    this.game = game;\n    this.height = 150;\n    this.width = 100;\n    this.x = 100;\n    this.y = 250;\n    // this.y = 400;\n    this.dvy = 10;\n    this.vy = -10;\n    this.state = \"ground\";\n    this.keypressed = false;\n    this.ctx = ctx;\n    this.canvas = canvas;\n    this.animateJump = this.animateJump.bind(this);\n    this.draw = this.draw.bind(this);\n    this.draw();\n  }\n\n\n\n  draw(){\n    let playerImage = new Image();\n    playerImage.src = './assets/images/player.png';\n    this.ctx.drawImage(playerImage, this.x, this.y, this.width, this.height);\n    // this.ctx.fillRect(this.x, this.y, this.width, this.height);\n  }\n\n    duck(){\n      // debugger\n      let temp;\n      this.y += this.height - this.width;\n      temp = this.width;\n      this.width = this.height;\n      this.height = temp;\n      this.state = \"ducked\";\n      this.game.draw();\n    }\n\n    unduck(){\n      let temp;\n      this.y += this.height - this.width;\n      temp = this.width;\n      this.width = this.height;\n      this.height = temp;\n      this.state = \"ground\";\n      this.game.draw();\n    }\n\n\n  animateJump(){\n    // debugger\n    // this.ctx.clearRect(100, 280, 20, 200);\n    this.game.draw();\n    if (this.y > 75 && (this.state === \"ground\" || this.state === \"going up\")) {\n      this.y += this.vy;\n      this.state = \"going up\";\n      window.requestAnimationFrame(this.animateJump);\n    }else if (this.y <= 75) {\n      this.state = \"going down\";\n      this.y += this.dvy;\n      window.requestAnimationFrame(this.animateJump);\n    }else if (this.state === \"going down\" && this.y >= 250) {\n      this.y = 250;\n      this.state = \"ground\";\n      this.keypressed = false;\n    }else if (this.state === \"going down\") {\n      this.y += this.dvy;\n      window.requestAnimationFrame(this.animateJump);\n    }\n\n  }\n}\n\n\n// class Player {\n//   constructor(x,y, context) {\n//     this.x = x;\n//     this.y = y;\n//     this.width = 20;\n//     this.height = 50;\n//     this.draw = this.draw.bind(this);\n//     this.context = context;\n//     this.state = \"normal\";\n//     this.vel = 0;\n//     this.keypressed = false;\n//     this.vx = 5;\n//     this.vy = 2;\n//     // this.stage = stage;\n//     // this.player = new createjs.Shape();\n//     // this.player.graphics.beginFill(\"DeepSkyBlue\").drawCircle(100, 400, 25);\n//     // // this.player.x = 100;\n//     // // this.player.y = 400;\n//     // this.setToStage();\n//   }\n//\n//\n//   // draw(){\n//   //   // context.fillRect(this.x, this.y, this.width, this.height);\n//     // context.fillRect(this.x, this.y, this.width, this.height);\n//   //   // debugger;\n//   //   this.context.fillStyle='#00a699';\n//   //   this.context.fillRect(this.x, this.y, this.width, this.height);\n//   //\n//   // }\n//\n//   update() {\n//     // Check if we are underground\n//     if (this.y + this.velocity + 36 > 500) {\n//         // If so, move us back to ground level and set velocity to zero\n//         this.velocity = 0;\n//         this.y = 500 - 36;\n//     } else {\n//         // Otherwise, move what is indicated by velocity\n//         this.velocity += gravity;\n//         this.y += this.velocity;\n//     }\n// }\n//\n//   jump(){\n//     // var canvas = document.getElementById('canvas');\n//     console.log(\"jump\");\n//     // this.context.clearRect(0, 0, canvas.width, canvas.height);\n//     this.y -= 50;\n//     this.draw();\n//   }\n// //   jump(){\n// //     var ctx = this.context;\n// //     var that = this;\n// //     requestAnim(function loop() {\n// //       // Clear the screen\n// //       let canvas = document.getElementById(\"canvas\");\n// //       ctx.clearRect(0, 0, canvas.width, canvas.height);\n// //       // Redraw the grass where it is supposed to be\n// //       that.draw();\n// //       // If the key is pressed, set velocity to -5\n// //       if (that.keypressed) {\n// //           that.velocity = -5;\n// //           that.keypressed = false;\n// //       }\n// //       that.update();\n// //       // Do again\n// //       requestAnim(loop);\n// //   });\n// // }\n//\n//\n//   // draw() {\n//   // var canvas = document.getElementById('canvas');\n//   // if (canvas.getContext) {\n//   //    var ctx = canvas.getContext('2d');\n//   //\n//   //   ctx.beginPath();\n//   //   ctx.arc(75, 75, 50, 0, Math.PI * 2, true); // Outer circle\n//   //   ctx.moveTo(110, 75);\n//   //   ctx.arc(75, 75, 35, 0, Math.PI, false);  // Mouth (clockwise)\n//   //   ctx.moveTo(65, 65);\n//   //   ctx.arc(60, 65, 5, 0, Math.PI * 2, true);  // Left eye\n//   //   ctx.moveTo(95, 65);\n//   //   ctx.arc(90, 65, 5, 0, Math.PI * 2, true);  // Right eye\n//   //   ctx.stroke();\n//   // }\n// // }\n//\n//\n//   duck(){\n//     debugger\n//     let temp;\n//     this.y += this.height - this.width;\n//     temp = this.width;\n//     this.width = this.height;\n//     this.height = temp;\n//     this.state = \"ducked\";\n//     this.draw();\n//   }\n//\n//   unduck(){\n//     let temp;\n//     this.y += this.height - this.width;\n//     temp = this.width;\n//     this.width = this.height;\n//     this.height = temp;\n//     this.state = \"normal\";\n//     this.draw();\n//   }\n//\n//   // setToStage(){\n//   //   this.stage.addChild(this.player);\n//   //   this.stage.update();\n//   // }\n//   //\n//\n//\n//   // jump(){\n//   //   createjs.Tween.get(this.player, { loop: false })\n//   //   .to({ y: -100 }, 200, createjs.Ease.getPowInOut(1))\n//   //   .to({ y: 0}, 300, createjs.Ease.getPowInOut(1));\n//   //   createjs.Ticker.setFPS(60);\n//   //   createjs.Ticker.addEventListener(\"tick\", this.stage);\n//   // }\n// }\n\nexport default Player;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/player.js\n// module id = 2\n// module chunks = 0","import Projectile from './projectile.js';\nimport Player from './player.js';\nimport Ball from './ball.js';\n\nclass Game {\n  constructor(canvas, ctx){\n    this.game = this;\n    this.player = new Player(canvas, ctx, this.game);\n    this.projectiles = [];\n    // this.projectile = new Projectile(canvas, ctx, this);\n    this.keypressed = false;\n    this.randomY = this.randomY.bind(this);\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.game = this;\n    this.gameOver = this.gameOver.bind(this);\n    this.collision = this.collision.bind(this);\n    this.reset = this.reset.bind(this);\n    this.state;\n    this.intervalId;\n    this.timerIntervalId;\n    this.drawBackground = this.drawBackground.bind(this);\n    this.calcProjVel = this.calcProjVel.bind(this);\n    // window.requestAnimationFrame(this.drawBackground);\n    this.player.y = 70;\n    window.requestAnimationFrame(this.player.animateJump);\n    this.player.keypressed = true;\n\n    // this.draw();\n    // this.drawBackground();\n  }\n\n  reset(){\n    this.projectiles = [];\n    this.state = \"over\";\n    this.keypressed = false;\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n    }\n    if (this.timerIntervalId) {\n      clearInterval(this.timerIntervalId);\n    }\n    document.getElementById('timer').innerHTML = \"0\";\n\n  }\n\n  draw(){\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.drawBackground();\n    this.player.draw();\n    // this.projectile.draw();\n    // this.projectiles.forEach(proj => proj.draw());\n    this.projectiles.forEach(projectile => {\n      if (projectile.x > 0) {\n        projectile.draw();\n      }\n    });\n    this.gameOver();\n\n  }\n\ndrawBackground(){\n  // debugger\n  let baseImage = new Image();\n  baseImage.src = './assets/images/desert.png';\n  this.ctx.drawImage(baseImage, 50, 50);\n\n}\n\n\n  gameOver(){\n    this.projectiles.forEach(projectile => {\n      if (projectile.x <= 115 && projectile.x >= 100 && this.collision(projectile, this.player)) {\n        // alert('Game Over');\n        if (document.getElementById('timer').innerHTML === '1') {\n          document.getElementById('alert').innerHTML = `Game Over, you survived ${document.getElementById('timer').innerHTML} second`;\n        }else {\n          document.getElementById('alert').innerHTML = `Game Over, you survived ${document.getElementById('timer').innerHTML} seconds`;\n        }\n        document.getElementById('alert').style.display='block';\n        setTimeout(\n          () => (document.getElementById('alert').style.display='none'),\n          3000);\n\n        this.reset();\n      }\n    });\n  }\n\n  collision(rect1, rect2){\n    if (rect2.y + rect2.height > rect1.y && rect2.state !== \"ducked\") {\n        return true;\n    }else if (rect2.state === \"ducked\" && rect2.y === rect1.y) {\n      return true;\n    }\n  }\n\n// rect2.y + rect2.height > rect1.y\n\n  randomY(){\n    if ( Math.floor(((Math.random() * 10))/5) === 0) {\n      return 250;\n    }else {\n      return 330;\n    }\n  }\n\n  calcProjVel(){\n    if (parseInt(document.getElementById('timer').innerHTML) < 5) {\n      return -14;\n    }else if (parseInt(document.getElementById('timer').innerHTML) < 10) {\n      return -18;\n    }else if (parseInt(document.getElementById('timer').innerHTML) < 15) {\n      return -22;\n    }else {\n      return -26;\n    }\n\n  }\n\n  keyProcessor(e){\n    // debugger\n    if (e.key === 'l' && this.keypressed === false) {\n      this.timerIntervalId = setInterval(()=> {\n        let newVal = parseInt(document.getElementById('timer').innerHTML) + 1;\n        document.getElementById('timer').innerHTML = newVal.toString();\n\n      },1000);\n      // this.projectile = new Projectile(this.canvas, this.ctx, this.game);\n      this.keypressed = true;\n      this.state = \"playing\";\n        this.intervalId = setInterval(() => {\n          if (this.state !== \"over\") {\n            let proj = new Projectile(this.canvas, this.ctx, this.game, this.randomY(), this.calcProjVel());\n            this.projectiles.push(proj);\n            // this.projectiles.forEach(projectile => window.requestAnimationFrame(projectile.animate));\n            this.projectiles.forEach(projectile => {\n              if (projectile.x > 0) {\n                window.requestAnimationFrame(projectile.animate);\n              }\n              // debugger\n            });\n\n          }\n\n        },1000);\n\n      // window.requestAnimationFrame(this.projectile.animate);\n    }else if (e.key === 'w' && this.player.keypressed === false && this.player.state !== 'ducked') {\n      window.requestAnimationFrame(this.player.animateJump);\n      this.player.keypressed = true;\n    }else if (e.key === 's' && this.player.state === 'ground') {\n      this.player.duck();\n    }else if (e.key === \"w\" && this.player.state === 'ducked') {\n      this.player.unduck();\n    }\n  }\n}\n\n// class Game {\n//   constructor() {\n//     this.canvas = document.getElementById('canvas');\n//     this.width = this.canvas.width;\n//     this.height = this.canvas.height;\n//     this.context = this.canvas.getContext(\"2d\");\n//     // ctx.fillStyle=\"#FF0000\";\n//     // this.context.fillStyle=\"white\";\n//     this.player = new Player(100, 400, this.context);\n//\n//\n//     // this.paused = false;\n//   }\n//\n//   draw(){\n//     this.context.fillStyle=\"#ff7e82\";\n//     this.context.fillRect(0, 0, this.width, this.height);\n//     // console.log(this.player);\n//     this.player.draw(this.context);\n//     // this.context.fillRect(this.width/2, 0, 2, this.height);\n//   }\n//\n//   update(){\n//     if (this.paused)\n//             return;\n//   }\n//\n//   jump(){\n//     debugger\n//     this.context.clearRect(0,0, this.canvas.width, this.canvas.height);\n//     this.player.draw();\n//     this.player.x += this.player.vx;\n//     this.player.y += this.player.vy;\n//     this.raf = window.requestAnimationFrame(this.jump);\n//   }\n//\n//\n//   keyProcessor(e){\n//     if (e.key === 'ArrowDown' && this.player.state !== \"ducked\") {\n//       this.player.duck();\n//     }else if (e.key === 'ArrowUp' && this.player.state === \"ducked\") {\n//       this.player.unduck();\n//     }else if (e.key === 'ArrowUp') {\n//       // this.jump();\n//       this.player.jump();\n//     }\n//   }\n//\n//\n// }\n//\n\n\nexport default Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 3\n// module chunks = 0","class Ball {\n  constructor(canvas, ctx) {\n    this.x = 100;\n    this.y = 100;\n    this.vy = 2;\n    this.vx = 3;\n    this.radius = 25;\n    this.color = 'radius';\n    this.draw = this.draw.bind(this);\n    this.raf;\n    this.canvas = canvas;\n    this.ctx = ctx;\n    this.animate = this.animate.bind(this);\n    this.draw();\n  }\n\n  draw(){\n    this.ctx.beginPath();\n    this.ctx.arc(this.x, this.y, 10, 0, Math.PI*2);\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n\n  animate(){\n    // debugger\n    // this.ctx.clearRect(75, 75, this.canvas.width, 50);\n    this.draw();\n    this.x += this.vx;\n    window.requestAnimationFrame(this.animate);\n  }\n}\n\nexport default Ball;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/ball.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}